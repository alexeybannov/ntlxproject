using System;using System.Collections.Generic;using System.Text;using ASC.Notify.Model;using ASC.Notify.Recipients;namespace ASC.Core.Notify{                public class SubscriptionProvider        : ISubscriptionProvider    {        readonly IRecipientProvider _RecipientProvider;        readonly IActionProvider _ActionProvider;        readonly string _SourceID;                                                        internal SubscriptionProvider(string sourceID, IRecipientProvider recipientProvider, IActionProvider actionProvider)        {            if (String.IsNullOrEmpty(sourceID)) throw new ArgumentNullException("sourceID");            if (recipientProvider == null) throw new ArgumentNullException("recipientProvider");            if (actionProvider == null) throw new ArgumentNullException("actionProvider");            _SourceID = sourceID;            _RecipientProvider = recipientProvider;            _ActionProvider = actionProvider;        }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #region ISubscriptionProvider Members                public string[] GetSubscriptions(IRecipient recipient, INotifyAction action)        {            throw new NotImplementedException();        }                public void Subscribe(INotifyAction action, string objectID, IRecipient recipient)        {            throw new NotImplementedException();        }                public void UnSubscribe(INotifyAction action, string objectID, IRecipient recipient)        {            throw new NotImplementedException();        }                public void UpdateSubscriptionMethod(INotifyAction action, IRecipient recipient, params string[] senderNames)        {            throw new NotImplementedException();        }        #endregion        #region ISubscriptionSource Members                public IRecipient[] GetRecipients(INotifyAction action, string objectID)        {            throw new NotImplementedException();        }                public string[] GetSubscriptionMethod(INotifyAction action, IRecipient recipient)        {            throw new NotImplementedException();        }                public bool IsUnsubscribe(IDirectRecipient recipient, INotifyAction action, string objectID)        {            throw new NotImplementedException();        }        #endregion    }}