using System;using System.Collections.Generic;using System.Text;namespace ASC.Common.Services{                [Serializable]    public class HostEmergencyRules    {        readonly EmergencyRule[] _ErrorRules = null;        readonly EmergencyRule[] _WarningRules = null;        readonly TimeSpan _ResetWarningCountPeriod = TimeSpan.Zero;        readonly TimeSpan _ResetErrorCountPeriod = TimeSpan.Zero;                                                                public HostEmergencyRules(                EmergencyRule[] warningRules,                TimeSpan resetWarningCountPeriod,                EmergencyRule[] errorRules,                TimeSpan resetErrorCountPeriod            )        {            if (warningRules == null)                throw new ArgumentNullException("warningRules");            if (errorRules == null)                throw new ArgumentNullException("errorRules");            if (warningRules.Length != 3)                throw new ArgumentException("warningRules.Length != 3");            if (errorRules.Length != 3)                throw new ArgumentException("errorRules.Length != 3");            _ErrorRules = errorRules;            _WarningRules = warningRules;            _ResetErrorCountPeriod = resetErrorCountPeriod;            _ResetWarningCountPeriod = resetWarningCountPeriod;        }        #region Processing Alerts                                 public EmergencyRule FirstWarning         {            get {                return _WarningRules[0];            }        }                                public EmergencyRule SecondWarning         {            get {                return _WarningRules[1];            }        }                                public EmergencyRule SubsequentWarning        {            get            {                return _WarningRules[2];            }        }                                public TimeSpan ResetWarningCountPeriod        {            get            {                return _ResetWarningCountPeriod;            }        }        #endregion        #region Error Handling                                public EmergencyRule FirstError         {            get {                return _ErrorRules[0];            }        }                                public EmergencyRule SecondError         {            get {                return _ErrorRules[1];            }        }                                public EmergencyRule SubsequentError        {            get            {                return _ErrorRules[2];            }        }                                public TimeSpan ResetErrorCountPeriod        {            get            {                return _ResetErrorCountPeriod;            }        }               #endregion        }}