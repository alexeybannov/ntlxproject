using System;using System.Collections.Generic;using System.Text;using ASC.Reflection;namespace ASC.Common.Services{                [Serializable]    public class EmergencyRule    {        EmergencyActionType _ActionType = EmergencyActionType.NoAction;        Type _EmergencyResolverType = null;        TimeSpan _RestartPeriod = TimeSpan.Zero;                                public EmergencyRule()                    {            _ActionType = EmergencyActionType.NoAction;        }                                        public EmergencyRule(TimeSpan restartPeriod)        {            _ActionType = EmergencyActionType.Restart;            _RestartPeriod = restartPeriod;        }                                                        public EmergencyRule(Type emergencyResolverType)        {            if (emergencyResolverType == null)                throw new ArgumentNullException("emergencyResolverType");            if (!TypeHelper.ImplementInterface(emergencyResolverType, typeof(IEmergencyResolver)))                throw new ArgumentException(                        String.Format(                                "Type \"{0}\" not implements interface \"{1}\"",                                emergencyResolverType, typeof(IEmergencyResolver)                            )                    );            _ActionType = EmergencyActionType.ExecuteEmergencyResolver;            _EmergencyResolverType = emergencyResolverType;        }                                public EmergencyActionType ActionType        {            get { return _ActionType; }        }                                        public Type EmergencyResolverType        {            get { return _EmergencyResolverType; }        }                                public TimeSpan RestartPeriod        {            get { return _RestartPeriod; }        }    }}